{
  "openapi": "3.0.1",
  "info": {
    "title": "Categories API",
    "description": "API for managing categories",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Example server"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "requestBody": {
          "description": "Category to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Get a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "summary": "Update a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Category to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/categories/{category_slug}/slug": {
      "get": {
        "summary": "Get a category by slug",
        "parameters": [
          {
            "name": "category_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/categories/{category_slug}/products": {
      "get": {
        "summary": "Get products by category slug",
        "parameters": [
          {
            "name": "category_slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Category not found or no products found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "slug": {
            "type": "string",
            "description": "Category tag (alphanumeric)"
          },
          "title": {
            "type": "string",
            "description": "Category name"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "image": {
            "type": "string",
            "description": "Category image URL"
          },
          "sortid": {
            "type": "integer",
            "description": "Sort ID"
          },
          "display": {
            "type": "boolean",
            "description": "Display status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Update date"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "Deletion flag"
          }
        },
        "required": [
          "id",
          "slug",
          "title",
          "sortid",
          "display",
          "created_at",
          "updated_at",
          "deleted_at"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "slug": {
            "type": "string",
            "description": "Product tag name (alphanumeric)"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "image": {
            "type": "string",
            "description": "Product image URL"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Price"
          },
          "sortid": {
            "type": "integer",
            "description": "Sort ID"
          },
          "display": {
            "type": "boolean",
            "description": "Display status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Update date"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "description": "Deletion flag"
          }
        },
        "required": [
          "id",
          "slug",
          "name",
          "price",
          "sortid",
          "display",
          "created_at",
          "updated_at",
          "deleted_at"
        ]
      }
    }
  }
}
